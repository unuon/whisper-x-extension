"use strict";var K=Object.create;var z=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var J=Object.getOwnPropertyNames;var Q=Object.getPrototypeOf,Z=Object.prototype.hasOwnProperty;var N=(r,e)=>()=>(r&&(e=r(r=0)),e);var D=(r,e)=>{for(var s in e)z(r,s,{get:e[s],enumerable:!0})},B=(r,e,s,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of J(e))!Z.call(r,t)&&t!==s&&z(r,t,{get:()=>e[t],enumerable:!(o=V(e,t))||o.enumerable});return r};var k=(r,e,s)=>(s=r!=null?K(Q(r)):{},B(e||!r||!r.__esModule?z(s,"default",{value:r,enumerable:!0}):s,r)),ee=r=>B(z({},"__esModule",{value:!0}),r);var x={};D(x,{WHISPER_MODELS:()=>g,getAvailableModels:()=>C,getEnglishOnlyModels:()=>F,getModelInfo:()=>se,getMultilingualModels:()=>L,getRecommendedModels:()=>G});function se(r){return g.find(e=>e.name===r)}function C(){return g.map(r=>r.name)}function G(){return g.filter(r=>r.recommended)}function F(){return g.filter(r=>r.englishOnly)}function L(){return g.filter(r=>!r.englishOnly)}var g,I=N(()=>{"use strict";g=[{name:"tiny",size:"~75 MB",description:"Fastest, least accurate. Good for quick testing.",englishOnly:!1,recommended:!1},{name:"tiny.en",size:"~75 MB",description:"Fastest, English-only. Good for quick English transcription.",englishOnly:!0,recommended:!1},{name:"base",size:"~142 MB",description:"Fast and decent accuracy. Good balance for multilingual.",englishOnly:!1,recommended:!0},{name:"base.en",size:"~142 MB",description:"Fast and decent accuracy. Good balance for English.",englishOnly:!0,recommended:!0},{name:"small",size:"~466 MB",description:"Better accuracy, slower processing. Good for quality multilingual transcription.",englishOnly:!1,recommended:!1},{name:"small.en",size:"~466 MB",description:"Better accuracy, slower processing. Good for quality English transcription.",englishOnly:!0,recommended:!1},{name:"medium",size:"~1.5 GB",description:"High accuracy, requires more resources. Professional multilingual transcription.",englishOnly:!1,recommended:!1},{name:"medium.en",size:"~1.5 GB",description:"High accuracy, requires more resources. Professional English transcription.",englishOnly:!0,recommended:!1},{name:"large-v1",size:"~3 GB",description:"Highest accuracy, very slow. For best quality multilingual transcription.",englishOnly:!1,recommended:!1},{name:"large",size:"~3 GB",description:"Highest accuracy, very slow. Latest large model.",englishOnly:!1,recommended:!1},{name:"large-v3-turbo",size:"~1.6 GB",description:"Fast large model with good accuracy. Best overall for production use.",englishOnly:!1,recommended:!0}]});var le={};D(le,{WHISPER_MODELS:()=>g,WhisperX:()=>h,default:()=>re,deleteModel:()=>Y,downloadModel:()=>_,downloadModelInternal:()=>A,getAvailableModels:()=>C,getBaseDirectory:()=>oe,getEnglishOnlyModels:()=>F,getModelInfo:()=>H,getMultilingualModels:()=>L,getRecommendedModels:()=>G,listAvailableModels:()=>j,listInstalledModels:()=>R,main:()=>ne,setBaseDirectory:()=>q});module.exports=ee(le);var P=k(require("path"),1),T=require("child_process"),a=require("fs"),O=k(require("os"),1),h=class{baseDirectory;constructor(e){this.baseDirectory=e||process.cwd()}getModelsDirectory(){return P.default.join(this.baseDirectory,"node_modules","nodejs-whisper","cpp","whisper.cpp","models")}getModelPath(e){return P.default.join(this.getModelsDirectory(),`ggml-${e}.bin`)}isModelInstalled(e){return(0,a.existsSync)(this.getModelPath(e))}async downloadModel(e,s=3){try{if(this.isModelInstalled(e))return console.log(`[WhisperX] \u2713 Model ${e} is already installed`),!0;let o=this.getModelsDirectory(),t=O.default.platform()==="win32";if(!(0,a.existsSync)(o))return console.error(`[WhisperX] Models directory does not exist: ${o}`),console.error("[WhisperX] Please ensure nodejs-whisper is properly installed"),!1;let n=t?"download-ggml-model.cmd":"download-ggml-model.sh",i=P.default.join(o,n);if(!(0,a.existsSync)(i))return console.error(`[WhisperX] Download script not found: ${i}`),console.error("[WhisperX] Please ensure nodejs-whisper is properly installed"),!1;console.log(`[WhisperX] Platform: ${t?"Windows":"Unix-like"}`),console.log(`[WhisperX] Model: ${e}`),console.log();let l=0;for(;l<s;){if(l++,l>1&&console.log(`[WhisperX] Retry attempt ${l}/${s}...`),await this.executeDownloadScript(t,o,e)&&this.isModelInstalled(e)){let c=this.getModelSize(e),$=c?this.formatSize(c):"Unknown";return console.log(`[WhisperX] \u2713 Model installed successfully (${$})`),!0}let W=this.getModelPath(e),X=(0,a.existsSync)(W);l<s&&(X&&console.log("[WhisperX] Partial download detected, will resume..."),console.log("[WhisperX] Retrying in 3 seconds..."),await new Promise(c=>setTimeout(c,3e3)))}return console.error(`[WhisperX] \u2717 Failed to download model after ${s} attempts`),!1}catch(o){return console.error(`[WhisperX] Error downloading model ${e}:`,o),!1}}executeDownloadScript(e,s,o){return new Promise(t=>{let n=e?process.env.COMSPEC||"C:\\Windows\\System32\\cmd.exe":"/bin/bash",l=(0,T.spawn)(n,e?["/c","download-ggml-model.cmd",o]:["download-ggml-model.sh",o],{cwd:s,windowsHide:!0,stdio:["ignore","pipe","pipe"]}),m=-1,W="",X="",c=!1,$=d=>{let f=d.split(`
`);for(let u of f){let y=u.trim();if(!y)continue;let S=y.match(/(\d+)%/);if(S&&S[1]){let M=parseInt(S[1],10);if(M!==m&&(M%10===0||M===100||!c)){m=M,c=!0;let b=`[WhisperX] Downloading ${o}: ${M}%`;process.stdout.isTTY?(process.stdout.clearLine(0),process.stdout.cursorTo(0),process.stdout.write(b)):console.log(b)}}else y.toLowerCase().includes("downloading")&&!c?console.log(`[WhisperX] Starting download: ${o}`):(y.toLowerCase().includes("resuming")||y.toLowerCase().includes("continue"))&&console.log(`[WhisperX] Resuming download: ${o}`)}};l.stdout&&l.stdout.on("data",d=>{let f=d.toString();W+=f,$(W)}),l.stderr&&l.stderr.on("data",d=>{let f=d.toString();X+=f,$(X);let u=f.trim();u&&!u.includes("%")&&!u.match(/^[\.\s]+$/)&&(u.toLowerCase().includes("error")||u.toLowerCase().includes("failed")||u.toLowerCase().includes("warning"))&&(process.stdout.isTTY&&c&&process.stdout.write(`
`),console.error(`[WhisperX] ${u}`))}),l.on("close",d=>{process.stdout.isTTY&&c&&process.stdout.write(`
`),d===0?console.log(`[WhisperX] \u2713 Download completed: ${o}`):console.error(`[WhisperX] \u2717 Download failed: ${o} (exit code: ${d})`),t(d===0)}),l.on("error",d=>{process.stdout.isTTY&&c&&process.stdout.write(`
`),console.error("[WhisperX] Failed to start download process:",d),d.message.includes("ENOENT")&&(e?(console.error(`[WhisperX] Could not find command: ${n}`),console.error("[WhisperX] Troubleshooting:"),console.error("[WhisperX]   1. Verify nodejs-whisper is properly installed"),console.error("[WhisperX]   2. Check if Windows System32 is in PATH"),console.error("[WhisperX]   3. Try running as administrator")):(console.error("[WhisperX] Could not find bash or download script"),console.error(`[WhisperX] Ensure the script exists and is executable in: ${s}`))),t(!1)});let U=setTimeout(()=>{process.stdout.isTTY&&c&&process.stdout.write(`
`),console.warn("[WhisperX] Download timeout (10 minutes), terminating..."),l.kill("SIGTERM"),t(!1)},600*1e3);l.on("close",()=>clearTimeout(U))})}async deleteModel(e){try{let s=this.getModelPath(e);return(0,a.existsSync)(s)?(console.log(`[WhisperX] Deleting model: ${e}`),(0,a.unlinkSync)(s),console.log(`[WhisperX] Successfully deleted model: ${e}`),!0):(console.log(`[WhisperX] Model ${e} is not installed`),!1)}catch(s){return console.error(`[WhisperX] Error deleting model ${e}:`,s),!1}}listInstalledModels(){try{let e=this.getModelsDirectory();return(0,a.existsSync)(e)?(0,a.readdirSync)(e).filter(o=>o.startsWith("ggml-")&&o.endsWith(".bin")).map(o=>o.replace("ggml-","").replace(".bin","")):[]}catch(e){return console.error("[WhisperX] Error listing models:",e),[]}}getInstalledModelsInfo(){return this.listInstalledModels().map(s=>{let o=this.getModelSize(s);return{name:s,size:o?this.formatSize(o):"Unknown",path:this.getModelPath(s)}})}getModelSize(e){try{let s=this.getModelPath(e);return(0,a.existsSync)(s)?(0,a.statSync)(s).size:null}catch(s){return console.error("[WhisperX] Error getting model size:",s),null}}formatSize(e){let s=["Bytes","KB","MB","GB"];if(e===0)return"0 Bytes";let o=Math.floor(Math.log(e)/Math.log(1024));return`${Math.round(e/Math.pow(1024,o)*100)/100} ${s[o]}`}};I();var re=h,E;function q(r){E=r,console.log(`[WhisperX] Base directory set to: ${r}`)}function oe(){return E}function p(){return new h(E)}function w(r){return r instanceof Error?r.message:String(r)}function v(r,e){let s=r.isModelInstalled(e),o=r.getModelPath(e),t=null;if(s){let n=r.getModelSize(e);t=n?r.formatSize(n):null}return{modelName:e,isInstalled:s,path:o,size:t}}async function H(r,e){r.stopPropagation();try{console.log(`[WhisperX] Getting info for model: ${e}`);let s=p();return{ok:!0,data:v(s,e)}}catch(s){return console.error("[WhisperX] Error getting model info:",s),{ok:!1,error:w(s)}}}async function j(r){r.stopPropagation();try{console.log("[WhisperX] Listing available models");let{WHISPER_MODELS:e}=await Promise.resolve().then(()=>(I(),x));return{ok:!0,data:{models:e}}}catch(e){return console.error("[WhisperX] Error listing available models:",e),{ok:!1,error:w(e)}}}async function R(r){r.stopPropagation();try{return console.log("[WhisperX] Listing installed models"),{ok:!0,data:{models:p().getInstalledModelsInfo()}}}catch(e){return console.error("[WhisperX] Error listing installed models:",e),{ok:!1,error:w(e)}}}async function A(r,e,s){let o=!1;function t(n,i){o||(o=!0,console.log(`[WhisperX] ${i}`),setTimeout(()=>{s.sender.send(r,{type:"completion",data:{log:i,exitCode:n?0:1,controllerId:r,modelName:e}})},100))}try{console.log(`[WhisperX] Starting model download: ${e}`),s.sender.send(r,{type:"progress",data:{log:`Downloading model: ${e}`,progress:0,controllerId:r,modelName:e}});let n=p();if(n.isModelInstalled(e))return t(!0,`Model ${e} is already installed`),{success:!0,modelName:e,alreadyInstalled:!0};if(await n.downloadModel(e)){let l=n.getModelSize(e),m=l?n.formatSize(l):"Unknown size";return t(!0,`Model ${e} downloaded successfully (${m})`),{success:!0,modelName:e}}else return t(!1,`Failed to download model: ${e}`),{success:!1,modelName:e,error:"Download failed"}}catch(n){let i=w(n);return t(!1,`Error downloading model: ${i}`),{success:!1,modelName:e,error:i}}}async function _(r,e,s){r.stopPropagation();let{modelName:o}=s,{invokeEvent:t}=r;console.log(`[WhisperX] Download request: ${e} -> ${o}`);let n=await A(e,o,t);return{downloadId:e,controllerId:e,result:n}}async function Y(r,e){r.stopPropagation();let{modelName:s}=e;try{console.log(`[WhisperX] Delete request: ${s}`);let o=p();return o.isModelInstalled(s)?await o.deleteModel(s)?(console.log(`[WhisperX] Successfully deleted model: ${s}`),{ok:!0,data:{modelName:s,message:`Model ${s} deleted successfully`}}):{ok:!1,data:{modelName:s,error:"Failed to delete model"}}:(console.log(`[WhisperX] Model ${s} is not installed`),{ok:!1,data:{modelName:s,notFound:!0,message:`Model ${s} is not installed`}})}catch(o){return console.error("[WhisperX] Error deleting model:",o),{ok:!1,error:w(o)}}}function te(r,e){r.handle(e.register("whisperx:getModelInfo"),async(s,o)=>{try{let t=p();return{success:!0,data:v(t,o)}}catch(t){return console.error("[WhisperX] Error getting model info:",t),{success:!1,error:t.message}}}),r.handle(e.register("whisperx:listAvailable"),async()=>{try{let{WHISPER_MODELS:s}=await Promise.resolve().then(()=>(I(),x));return{success:!0,models:s}}catch(s){return console.error("[WhisperX] Error listing available models:",s),{success:!1,error:s.message}}}),r.handle(e.register("whisperx:listInstalled"),async()=>{try{return{success:!0,models:p().getInstalledModelsInfo()}}catch(s){return console.error("[WhisperX] Error listing installed models:",s),{success:!1,error:s.message}}}),r.handle(e.register("whisperx:downloadModel"),async(s,o)=>{try{console.log(`[WhisperX] IPC download request: ${o}`);let t=p();if(t.isModelInstalled(o)){let i=t.getModelSize(o);return{success:!0,alreadyInstalled:!0,message:`Model ${o} is already installed`,size:i?t.formatSize(i):null}}if(await t.downloadModel(o)){let i=t.getModelSize(o);return{success:!0,message:`Model ${o} downloaded successfully`,size:i?t.formatSize(i):null}}else return{success:!1,error:"Download failed"}}catch(t){return console.error("[WhisperX] Error downloading model:",t),{success:!1,error:t.message}}}),r.handle(e.register("whisperx:deleteModel"),async(s,o)=>{try{console.log(`[WhisperX] IPC delete request: ${o}`);let t=p();return t.isModelInstalled(o)?await t.deleteModel(o)?{success:!0,message:`Model ${o} deleted successfully`}:{success:!1,error:"Failed to delete model"}:{success:!1,notFound:!0,message:`Model ${o} is not installed`}}catch(t){return console.error("[WhisperX] Error deleting model:",t),{success:!1,error:t.message}}})}function ne({events:r,channels:e,electron:{ipcMain:s},api:o}){let t=__dirname,n=t.replace(/[\\/]dist$/,"");console.log(`[WhisperX] Extension path: ${t}`),console.log(`[WhisperX] Extension root: ${n}`),q(n),r.on("whisperx:getModelInfo",H,-10),r.on("whisperx:listAvailable",j,-10),r.on("whisperx:listInstalled",R,-10),r.on("whisperx:downloadModel",_,-10),r.on("whisperx:deleteModel",Y,-10),te(s,e),console.log("[WhisperX] Extension initialized successfully")}0&&(module.exports={WHISPER_MODELS,WhisperX,deleteModel,downloadModel,downloadModelInternal,getAvailableModels,getBaseDirectory,getEnglishOnlyModels,getModelInfo,getMultilingualModels,getRecommendedModels,listAvailableModels,listInstalledModels,main,setBaseDirectory});
